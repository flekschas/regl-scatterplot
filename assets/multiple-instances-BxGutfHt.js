import{d as m,f as S,c as b,b as C,e as v}from"./menu-D496VOBB.js";import{t as E}from"./apache-arrow-szX3Jr2h.js";import"./vendor-CWN1LCVq.js";const u=2,F=2,w=3,I=.66,A=["T-shirt/top","Trouser","Pullover","Dress","Coat","Sandal","Shirt","Sneaker","Bag","Ankle boot"],p=["#FFFF00","#1CE6FF","#FF34FF","#FF4A46","#008941","#006FA6","#A30059","#FFDBE5","#7A4900","#0000A6"],N=fetch("https://storage.googleapis.com/flekschas/regl-scatterplot/fashion-mnist-embeddings.arrow");m("Loading...");const k=document.querySelector("#footer");k.classList.remove("hidden");const M=document.querySelector("#info-content");M.innerHTML=`
<p><a href="https://github.com/zalandoresearch/fashion-mnist" target="_blank">Fashion MNIST</a> embedding using four different techniques: PCA, t-SNE, UMAP, and a convolutional autoencoder.</p>
<p> Select a point so see the corresponding image.</p>
`;const l=document.querySelector("#parent-wrapper"),s=document.createElement("div");s.id="note";s.style.opacity=0;l.appendChild(s);const L=(t,e)=>{s.style.opacity=1,s.style.background=e,s.textContent=t},T=()=>{s.style.opacity=0},a=document.createElement("div");a.id="center-note";a.style.opacity=0;const i=document.createElement("div");i.style.width="56px";i.style.height="56px";i.style.backgroundColor="black";i.style.backgroundSize="cover";i.style.backgroundRepeat="no-repeat";a.appendChild(i);l.appendChild(a);const O=(t,e)=>String(t).padStart(e,"0"),z=(t,e)=>{const n=new Image,r=`https://storage.googleapis.com/flekschas/regl-scatterplot/fashion-mnist-images/${O(t,5)}.png`;n.onload=()=>{a.style.opacity=1,a.style.transform="translate(-50%, -50%) scale(1)",i.style.backgroundImage=`url("${r}")`,a.style.background=p[e]},n.src=r},_=()=>{a.style.opacity=0,a.style.transform="translate(-50%, -50%) scale(0)"};l.style.display="grid";l.style.gridTemplateColumns=`repeat(${u}, minmax(0, 1fr))`;l.style.gridTemplateRows="repeat(2, minmax(0, 1fr))";l.style.gap="1rem";const g=document.querySelector("#canvas"),h=document.querySelector("#canvas-wrapper");h.style.position="relative";const y=[g];for(let t=0;t<u*F-1;t++){const e=g.cloneNode(),n=h.cloneNode();n.appendChild(e),l.appendChild(n),y.push(e)}const f=S();f.isSupported||m("Unfortunately, your browser does not support all WebGL extensions required by regl-scatterplot",!0);const c=y.map(t=>b({renderer:f,canvas:t,pointSize:w,opacity:I,lassoOnLongPress:!0}));console.log(`Scatterplot v${c[0].get("version")}`);C({scatterplot:c});const q=(t,e,n)=>{c.filter(r=>r!==t).forEach(r=>{r.select(e,{preventEvent:!0})}),c.forEach(r=>{r.zoomToPoints(e,{padding:.2,transition:!0,transitionDuration:1500})});const o=e[Math.floor(Math.random()*(e.length-1))];z(o,n[o])},x=t=>{c.filter(e=>e!==t).forEach(e=>{e.deselect({preventEvent:!0})}),c.forEach(e=>{e.zoomToOrigin({transition:!0,transitionDuration:1500})}),_()};N.then(t=>E(t)).then(t=>{v();const e=t.data[0].children.map(o=>o.values),n=e[e.length-1];c.forEach((o,r)=>{o.draw({x:e[r*2],y:e[r*2+1],z:n}),o.set({colorBy:"z",pointColor:p}),o.subscribe("pointover",d=>{L(A[n[d]],p[n[d]])}),o.subscribe("pointout",T),o.subscribe("select",({points:d})=>q(o,d,n)),o.subscribe("deselect",()=>x(o))})}).catch(t=>{m("Could not load embedding... Damn...",!0),console.error(t)});
