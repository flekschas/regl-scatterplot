import{c as z,a as C,s as R}from"./utils-cc2710e4.js";import{l as g,c as H}from"./d3-7c155787.js";import"./vendor-b0595fa4.js";const d=document.querySelector("#canvas"),m=document.querySelector("#canvas-wrapper"),y=document.querySelector("#num-points"),h=document.querySelector("#num-points-value"),S=document.querySelector("#point-size"),k=document.querySelector("#point-size-value"),x=document.querySelector("#opacity"),$=document.querySelector("#opacity-value"),w=document.querySelector("#click-lasso-initiator"),M=document.querySelector("#reset"),A=document.querySelector("#export"),E=document.querySelector("#example-text-overlay");E.setAttribute("class","active");E.removeAttribute("href");const v=document.createElement("div");v.id="note";v.textContent="Zoom in to see labels!";m.appendChild(v);const n=document.createElement("canvas");n.id="#text-overlay";n.style.position="absolute";n.style.top=0;n.style.right=0;n.style.bottom=0;n.style.left=0;n.style.pointerEvents="none";m.appendChild(n);const f=()=>{const{width:e,height:t}=m.getBoundingClientRect();n.width=e*window.devicePixelRatio,n.height=t*window.devicePixelRatio,n.style.width=`${e}px`,n.style.height=`${t}px`};f();window.addEventListener("resize",f);const L=12,a=n.getContext("2d");a.font=`${L*window.devicePixelRatio}px sans-serif`;a.textAlign="center";let u=[],c=1e4,l=4,r=1,p=[];const I=200,T=10,O=2,V=!0,B=[1,1,.878431373,.33],o=z({canvas:d,lassoMinDelay:T,lassoMinDist:O,pointSize:l,showReticle:V,reticleColor:B,xScale:g().domain([-1,1]),yScale:g().domain([-1,1]),pointColor:"#fff",opacityBy:"density",lassoInitiator:!0});C(o);A.addEventListener("click",()=>R(o));console.log(`Scatterplot v${o.get("version")}`);o.subscribe("select",({points:e})=>{if(console.log("Selected:",e),p=e,p.length===1){const t=u[p[0]];console.log(`X: ${t[0]}
Y: ${t[1]}
Category: ${t[2]}
Value: ${t[3]}`)}});o.subscribe("deselect",()=>{p=[]});const D=(e,t,i)=>{a.clearRect(0,0,d.width,d.height),a.fillStyle="rgb(255, 255, 255)";for(let s=0;s<e.length;s++)a.fillText(e[s],t(u[e[s]][0])*window.devicePixelRatio,i(u[e[s]][1])*window.devicePixelRatio-L*1.2*window.devicePixelRatio)},F=()=>{a.clearRect(0,0,d.width,d.height)};o.subscribe("view",({xScale:e,yScale:t})=>{const i=o.get("pointsInView");i.length<=I?D(i,e,t):F()});const N=e=>Array.from({length:e},()=>[-1+Math.random()*2,-1+Math.random()*2]),P=e=>{c=e,y.value=c,h.innerHTML=c,u=N(c),o.draw(u)},W=e=>{h.innerHTML=`${+e.target.value} <em>release to redraw</em>`};y.addEventListener("input",W);const X=e=>P(+e.target.value);y.addEventListener("change",X);const Y=e=>{const t=H().domain([1,10]).range([e,e*10]);return Array(100).fill().map((i,s)=>t(1+s/99*9))},b=e=>{l=e,S.value=l,k.innerHTML=l,o.set({pointSize:Y(l)})},Z=e=>b(+e.target.value);S.addEventListener("input",Z);const j=e=>Array(10).fill().map((t,i)=>(i+1)/10*e),q=e=>{r=e,x.value=r,$.innerHTML=r,o.set({opacity:j(r)})},G=e=>q(+e.target.value);x.addEventListener("input",G);const J=e=>{o.set({lassoInitiator:e.target.checked})};w.addEventListener("change",J);w.checked=o.get("lassoInitiator");const K=()=>{o.reset()};M.addEventListener("click",K);b(l);q(r);P(c);
